local newPartChannel = 2000
local messageChannel = 3000
local askForInitGUIEvent = "askForInitGUI"
local sendInitGUIEvent = "sendInitGUI"
local extCompEvent = "externalComputerEvent"
local mainCompEvent = "mainComputerEvent"

local modems = {peripheral.find("modem")}
for i,v in pairs(modems) do
    v.open(newPartChannel)
    v.open(messageChannel)
end
local sendMessage = function(channel, message)
    for i,v in pairs(modems) do
        v.transmit(channel, 1, message)
    end
end

local buttonToggleDatas = {
    ["precisionStatus"] = false
}
local buttonLayout = {

}

local updateMonitor = function(monitor)
    monitor.clear()
    local sizeX, sizeY = monitor.getSize()
    monitor.setBackgroundColor(colors.black)
    monitor.setTextColor(colors.white)
    monitor.clear()

    local currentX = 1
    local currentY = 1

    local function write(txt)
        monitor.setCursorPos(currentX, currentY)
        monitor.write(txt)
    end

    write("hi")
end

local messageListen = function()
    while true do 
        local event, side, channel, replyChannel, message, distance = os.pullEvent("modem_message")
        print("modem message!")

        local tabl = textutils.unserialise(message)
        local eventName, value = tabl[1], tabl[2]

        if channel == newPartChannel then
            if eventName == sendInitGUIEvent then
                for i,v in pairs(value) do
                    print(textutils.serialise(v))
                end
            end
        elseif channel == messageChannel then
            if eventName == mainCompEvent then

            end
        end
    end
end
local monitorTouchListen = function()
    while true do 
        local event, side, x, y = os.pullEvent("monitor_touch")
        print("monitor touched!")
    end
end

local mainLoop = function()
    while true do 
        local monitorsGot = { peripheral.find("monitor") }
        for i,v in pairs(monitorsGot) do
            updateMonitor(v)
        end
        print("tick")

        os.sleep(1)
    end
end

coroutine.wrap(messageListen)()
coroutine.wrap(monitorTouchListen)()
mainLoop()
